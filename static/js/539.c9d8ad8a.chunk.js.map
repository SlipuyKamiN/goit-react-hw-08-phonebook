{"version":3,"file":"static/js/539.c9d8ad8a.chunk.js","mappings":"iOAEaA,EAAOC,EAAAA,EAAAA,KAAH,oDAIJC,EAAQD,EAAAA,EAAAA,MAAH,sBAELE,EAAcF,EAAAA,EAAAA,OAAH,sB,2DCDXG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,eAEXC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJG,QAAQ,yCAA0C,sBAClDC,WACHC,SAAUL,EAAAA,KAEPI,SAAS,yBACTE,IAAI,EAAG,wDAGZ,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYV,KALtBW,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MAUF,OACE,UAACpB,EAAD,CAAMqB,aAAa,MAAMC,SAAUH,GALZ,SAAC,GAAyB,IAAvBT,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SACjCR,GAASkB,EAAAA,EAAAA,IAAM,CAAEb,MAAAA,EAAOG,SAAAA,KACxBO,EAAM,CAAEV,MAAO,GAAIG,SAAU,IAC9B,IAEC,WACE,SAACX,GAAD,QAAOsB,KAAK,SAAYN,EAAS,YACjC,SAAChB,GAAD,QAAOsB,KAAK,YAAeN,EAAS,eACpC,SAACf,EAAD,CAAaqB,KAAK,SAAlB,SAA2B,YAGhC,EChCD,EAPc,WACZ,OACE,+BACE,SAACpB,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 1px solid black;\n`;\n\nexport const Input = styled.input``;\n\nexport const LoginButton = styled.button``;\n","import { Form, Input, LoginButton } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/authOperations';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .matches('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$', 'Wrong email format')\n      .required(),\n    password: yup\n      .string()\n      .required('No password provided.')\n      .min(8, 'Password is too short - should be 8 chars minimum.'),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    // formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const handleFormSubmit = ({ email, password }) => {\n    dispatch(logIn({ email, password }));\n    reset({ email: '', password: '' });\n  };\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit(handleFormSubmit)}>\n      <Input type=\"email\" {...register('email')}></Input>\n      <Input type=\"password\" {...register('password')}></Input>\n      <LoginButton type=\"submit\">Login</LoginButton>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\nexport default Login;\n"],"names":["Form","styled","Input","LoginButton","LoginForm","dispatch","useDispatch","validationSchema","yup","shape","email","matches","required","password","min","useForm","resolver","yupResolver","register","handleSubmit","reset","autoComplete","onSubmit","logIn","type"],"sourceRoot":""}